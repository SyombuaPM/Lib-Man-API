// <auto-generated />
using LibManApi.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LibManApi.Migrations
{
    [DbContext(typeof(LibraryDbContext))]
    [Migration("20240406032005_AddBookTypeDiscriminator")]
    partial class AddBookTypeDiscriminator
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.3");

            modelBuilder.Entity("LibManApi.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Author")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsBorrowed")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PublicationYear")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Books", (string)null);

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("LibManApi.EBook", b =>
                {
                    b.HasBaseType("LibManApi.Book");

                    b.Property<string>("Isbn_No")
                        .HasColumnType("TEXT");

                    b.ToTable("EBooks", (string)null);
                });

            modelBuilder.Entity("LibManApi.PrintedBook", b =>
                {
                    b.HasBaseType("LibManApi.Book");

                    b.Property<string>("FileFormat")
                        .HasColumnType("TEXT");

                    b.ToTable("PrintedBooks", (string)null);
                });

            modelBuilder.Entity("LibManApi.EBook", b =>
                {
                    b.HasOne("LibManApi.Book", null)
                        .WithOne()
                        .HasForeignKey("LibManApi.EBook", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LibManApi.PrintedBook", b =>
                {
                    b.HasOne("LibManApi.Book", null)
                        .WithOne()
                        .HasForeignKey("LibManApi.PrintedBook", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
